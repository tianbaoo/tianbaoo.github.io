<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Go on 天宝的博客</title>
    <link>http://tianbaoo.github.io/tags/Go/</link>
    <description>Recent content in Go on 天宝的博客</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>zh-CN</language>
    <lastBuildDate>Sat, 20 Aug 2022 09:33:25 +0000</lastBuildDate>
    
	<atom:link href="http://tianbaoo.github.io/tags/Go/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>Go泛型</title>
      <link>http://tianbaoo.github.io/post/GoGeneric/</link>
      <pubDate>Sat, 20 Aug 2022 09:33:25 +0000</pubDate>
      
      <guid>http://tianbaoo.github.io/post/GoGeneric/</guid>
      <description>Golang泛型知识点 1.声明泛型函数 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 package main import ( &amp;#34;fmt&amp;#34; ) func printSlice[T any](s []T){ for _,v := range s{ fmt.Printf(&amp;#34;%v\n&amp;#34;,v) } } func main(){ // 使用泛型可以传入多种类型不同的参数，进行函数复用 printSlice[int]([]int{1,2,3,4,5}) printSlice[float64]([]float64{1.1,1.2,1.3}) printSlice[string]([]string{&amp;#34;hello&amp;#34;,&amp;#34;world&amp;#34;,&amp;#34;!&amp;#34;}) // 省略显示类型 省略显示[T any] printSlice([]int64{5,4,3,2,1}) } [T any]参数的类型，意思是该函数支持任何T类型 多个泛型参数语法 1</description>
    </item>
    
  </channel>
</rss>